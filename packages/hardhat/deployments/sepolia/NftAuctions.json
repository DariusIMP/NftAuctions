{
  "address": "0x711FC3Ed5FD70Dbe8d08FEa7aDB4e2711E73E6f6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "highestBidder",
          "type": "address"
        }
      ],
      "name": "AuctionCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startingPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "AuctionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "winningBid",
          "type": "uint256"
        }
      ],
      "name": "AuctionEnded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "AuctionWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BidPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyPaid",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "auctionCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "auctions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "highestBidder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "highestBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startingPrice",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC721",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "ended",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cleanupExpiredAuctions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "_nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startingPriceWei",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_durationSeconds",
          "type": "uint256"
        }
      ],
      "name": "createAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_auctionId",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_auctionId",
          "type": "uint256"
        }
      ],
      "name": "endAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "expiredAuctionIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "expiredAuctionIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_auctionId",
          "type": "uint256"
        }
      ],
      "name": "getAuction",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "auctionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "highestBidder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "highestBid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startingPrice",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC721",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "ended",
              "type": "bool"
            }
          ],
          "internalType": "struct NftAuctions.Auction",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpiredAuctions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "auctionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "highestBidder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "highestBid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startingPrice",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC721",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "ended",
              "type": "bool"
            }
          ],
          "internalType": "struct NftAuctions.Auction[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOngoingAuctions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "auctionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "highestBidder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "highestBid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startingPrice",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC721",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "ended",
              "type": "bool"
            }
          ],
          "internalType": "struct NftAuctions.Auction[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_auctionId",
          "type": "uint256"
        }
      ],
      "name": "isAuctionExpired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ongoingAuctionIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ongoingAuctionIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_auctionId",
          "type": "uint256"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_auctionId",
          "type": "uint256"
        }
      ],
      "name": "withdrawAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x6587e6e04ad96da8b710c6e08f212d710f5c430892a46ad20e36337f1d04d53f",
  "receipt": {
    "to": null,
    "from": "0xDBfb6265396E82c6Af1E547401C4CB81468cf435",
    "contractAddress": "0x711FC3Ed5FD70Dbe8d08FEa7aDB4e2711E73E6f6",
    "transactionIndex": 68,
    "gasUsed": "1853385",
    "logsBloom": "0x
    "blockHash": "0xb7a929c21f14fd00085b4e2cf10b9c9e43850599ced16c96cfa1453d6117b2f4",
    "transactionHash": "0x6587e6e04ad96da8b710c6e08f212d710f5c430892a46ad20e36337f1d04d53f",
    "logs": [
      {
        "transactionIndex": 68,
        "blockNumber": 8879239,
        "transactionHash": "0x6587e6e04ad96da8b710c6e08f212d710f5c430892a46ad20e36337f1d04d53f",
        "address": "0x711FC3Ed5FD70Dbe8d08FEa7aDB4e2711E73E6f6",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000dbfb6265396e82c6af1e547401c4cb81468cf435"
        ],
        "data": "0x",
        "logIndex": 72,
        "blockHash": "0xb7a929c21f14fd00085b4e2cf10b9c9e43850599ced16c96cfa1453d6117b2f4"
      }
    ],
    "blockNumber": 8879239,
    "cumulativeGasUsed": "6653461",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xDBfb6265396E82c6Af1E547401C4CB81468cf435"
  ],
  "numDeployments": 2,
  "solcInputHash": "f321ffdf5857ed1bfadee60180590513",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"}],\"name\":\"AuctionCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startingPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"AuctionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winningBid\",\"type\":\"uint256\"}],\"name\":\"AuctionEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"AuctionWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BidPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"name\":\"RoyaltyPaid\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"auctionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startingPrice\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC721\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ended\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cleanupExpiredAuctions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startingPriceWei\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_durationSeconds\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_auctionId\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_auctionId\",\"type\":\"uint256\"}],\"name\":\"endAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"expiredAuctionIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"expiredAuctionIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_auctionId\",\"type\":\"uint256\"}],\"name\":\"getAuction\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startingPrice\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC721\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ended\",\"type\":\"bool\"}],\"internalType\":\"struct NftAuctions.Auction\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpiredAuctions\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startingPrice\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC721\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ended\",\"type\":\"bool\"}],\"internalType\":\"struct NftAuctions.Auction[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOngoingAuctions\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startingPrice\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC721\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ended\",\"type\":\"bool\"}],\"internalType\":\"struct NftAuctions.Auction[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_auctionId\",\"type\":\"uint256\"}],\"name\":\"isAuctionExpired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ongoingAuctionIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ongoingAuctionIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_auctionId\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_auctionId\",\"type\":\"uint256\"}],\"name\":\"withdrawAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NftAuctions.sol\":\"NftAuctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/NftAuctions.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { IERC721 } from \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { ReentrancyGuard } from \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\n// EIP-2981 Royalty Interface\\ninterface IERC2981 {\\n    function royaltyInfo(uint256 tokenId, uint256 salePrice) external view returns (address receiver, uint256 royaltyAmount);\\n}\\n\\ncontract NftAuctions is Ownable, ReentrancyGuard {\\n    struct Auction {\\n        uint256 auctionId;\\n        address seller;\\n        address highestBidder;\\n        uint256 highestBid;\\n        uint256 startTime;\\n        uint256 endTime;\\n        uint256 startingPrice;\\n        IERC721 nftContract;\\n        uint256 tokenId;\\n        bool ended;\\n    }\\n\\n    mapping(uint256 => Auction) public auctions;\\n    uint256 public auctionCount;\\n\\n    // Efficient storage for ongoing and expired auctions\\n    uint256[] public ongoingAuctionIds;\\n    uint256[] public expiredAuctionIds;\\n    mapping(uint256 => uint256) public ongoingAuctionIndex;\\n    mapping(uint256 => uint256) public expiredAuctionIndex;\\n\\n    event AuctionCreated(\\n        uint256 indexed auctionId,\\n        address indexed seller,\\n        address indexed nftContract,\\n        uint256 tokenId,\\n        uint256 startingPrice,\\n        uint256 startTime,\\n        uint256 endTime\\n    );\\n\\n    event BidPlaced(uint256 auctionId, address indexed bidder, uint256 amount);\\n\\n    event AuctionEnded(uint256 auctionId, address indexed winner, uint256 winningBid);\\n\\n    event RoyaltyPaid(uint256 auctionId, address indexed receiver, uint256 royaltyAmount);\\n\\n    event AuctionWithdrawn(uint256 auctionId, address indexed seller);\\n\\n    event AuctionCancelled(uint256 auctionId, address indexed seller, address indexed highestBidder);\\n\\n    constructor(address initialOwner) Ownable(initialOwner) {}\\n\\n    receive() external payable {}\\n\\n    function createAuction(\\n        IERC721 _nftContract,\\n        uint256 _tokenId,\\n        uint256 _startingPriceWei,\\n        uint256 _durationSeconds\\n    ) external nonReentrant {\\n        require(_startingPriceWei > 0, \\\"Starting price must be > 0\\\");\\n        require(_durationSeconds > 0, \\\"Duration must be > 0\\\");\\n\\n        _nftContract.transferFrom(msg.sender, address(this), _tokenId);\\n\\n        uint256 auctionId = auctionCount;\\n        uint256 endTime = block.timestamp + _durationSeconds;\\n\\n        auctions[auctionId] = Auction({\\n            auctionId: auctionId,\\n            seller: msg.sender,\\n            highestBidder: address(0),\\n            highestBid: 0, // Initialize to 0, not starting price\\n            startTime: block.timestamp,\\n            endTime: endTime,\\n            startingPrice: _startingPriceWei,\\n            nftContract: _nftContract,\\n            tokenId: _tokenId,\\n            ended: false\\n        });\\n\\n        ongoingAuctionIndex[auctionId] = ongoingAuctionIds.length;\\n        ongoingAuctionIds.push(auctionId);\\n\\n        emit AuctionCreated(\\n            auctionId,\\n            msg.sender,\\n            address(_nftContract),\\n            _tokenId,\\n            _startingPriceWei,\\n            block.timestamp,\\n            endTime\\n        );\\n\\n        auctionCount += 1;\\n    }\\n\\n    function placeBid(uint256 _auctionId) external payable nonReentrant {\\n        Auction storage auction = auctions[_auctionId];\\n        require(auction.seller != address(0), \\\"Auction does not exist\\\");\\n        require(!auction.ended, \\\"Auction ended\\\");\\n        require(block.timestamp < auction.endTime, \\\"Auction ended\\\");\\n        require(msg.value > auction.highestBid, \\\"Bid too low\\\");\\n        require(!auction.ended, \\\"Auction already ended\\\");\\n\\n        if (auction.highestBidder != address(0)) {\\n            payable(auction.highestBidder).transfer(auction.highestBid);\\n        }\\n\\n        auction.highestBidder = msg.sender;\\n        auction.highestBid = msg.value;\\n\\n        emit BidPlaced(_auctionId, msg.sender, msg.value);\\n    }\\n\\n    function endAuction(uint256 _auctionId) external nonReentrant {\\n        Auction storage auction = auctions[_auctionId];\\n        require(auction.seller != address(0), \\\"Auction does not exist\\\");\\n        require(block.timestamp >= auction.endTime, \\\"Auction not ended yet\\\");\\n        require(!auction.ended, \\\"Auction already ended\\\");\\n\\n        // Anyone can end an expired auction, but we'll track who can claim\\n        auction.ended = true;\\n\\n        _moveToExpired(_auctionId);\\n\\n        if (auction.highestBidder != address(0)) {\\n            auction.nftContract.transferFrom(address(this), auction.highestBidder, auction.tokenId);\\n            \\n            // Handle royalties if the NFT contract supports EIP-2981\\n            try IERC2981(address(auction.nftContract)).royaltyInfo(auction.tokenId, auction.highestBid) returns (address receiver, uint256 royaltyAmount) {\\n                if (royaltyAmount > 0 && receiver != address(0)) {\\n                    // Pay royalty to the receiver\\n                    payable(receiver).transfer(royaltyAmount);\\n                    emit RoyaltyPaid(_auctionId, receiver, royaltyAmount);\\n                    \\n                    // Pay remaining amount to seller\\n                    uint256 sellerAmount = auction.highestBid - royaltyAmount;\\n                    payable(auction.seller).transfer(sellerAmount);\\n                } else {\\n                    // No royalty, pay full amount to seller\\n                    payable(auction.seller).transfer(auction.highestBid);\\n                }\\n            } catch {\\n                // NFT contract doesn't support EIP-2981, pay full amount to seller\\n                payable(auction.seller).transfer(auction.highestBid);\\n            }\\n             emit AuctionEnded(_auctionId, auction.highestBidder, auction.highestBid);\\n        } else {\\n            auction.nftContract.transferFrom(address(this), auction.seller, auction.tokenId);\\n            emit AuctionEnded(_auctionId, address(0), 0);\\n        }\\n    }\\n\\n    // New function to check if auction is expired (can be ended)\\n    function isAuctionExpired(uint256 _auctionId) external view returns (bool) {\\n        Auction memory auction = auctions[_auctionId];\\n        return auction.seller != address(0) && block.timestamp >= auction.endTime && !auction.ended;\\n    }\\n\\n    // New function to get current blockchain timestamp\\n    function getCurrentTime() external view returns (uint256) {\\n        return block.timestamp;\\n    }\\n\\n    function _moveToExpired(uint256 _auctionId) internal {\\n        uint256 indexToRemove = ongoingAuctionIndex[_auctionId];\\n        uint256 lastIndex = ongoingAuctionIds.length - 1;\\n\\n        if (indexToRemove != lastIndex) {\\n            uint256 lastAuctionId = ongoingAuctionIds[lastIndex];\\n            ongoingAuctionIds[indexToRemove] = lastAuctionId;\\n            ongoingAuctionIndex[lastAuctionId] = indexToRemove;\\n        }\\n\\n        ongoingAuctionIds.pop();\\n        delete ongoingAuctionIndex[_auctionId];\\n\\n        expiredAuctionIndex[_auctionId] = expiredAuctionIds.length;\\n        expiredAuctionIds.push(_auctionId);\\n    }\\n\\n    // Helper function to get royalty info\\n    function getRoyaltyInfo(address nftContract, uint256 tokenId, uint256 salePrice) external view returns (address receiver, uint256 royaltyAmount) {\\n        try IERC2981(nftContract).royaltyInfo(tokenId, salePrice) returns (address _receiver, uint256 _royaltyAmount) {\\n            return (_receiver, _royaltyAmount);\\n        } catch {\\n            return (address(0), 0);\\n        }\\n    }\\n\\n    function getAuction(uint256 _auctionId) external view returns (Auction memory) {\\n        return auctions[_auctionId];\\n    }\\n\\n    function getOngoingAuctions() external view returns (Auction[] memory) {\\n        uint256 count = 0;\\n\\n        for (uint256 i = 0; i < ongoingAuctionIds.length; i++) {\\n            uint256 auctionId = ongoingAuctionIds[i];\\n            if (!auctions[auctionId].ended && block.timestamp < auctions[auctionId].endTime) {\\n                count++;\\n            }\\n        }\\n\\n        Auction[] memory ongoing = new Auction[](count);\\n        uint256 index = 0;\\n\\n        for (uint256 i = 0; i < ongoingAuctionIds.length; i++) {\\n            uint256 auctionId = ongoingAuctionIds[i];\\n            if (!auctions[auctionId].ended && block.timestamp < auctions[auctionId].endTime) {\\n                ongoing[index] = auctions[auctionId];\\n                index++;\\n            }\\n        }\\n\\n        return ongoing;\\n    }\\n\\n    function getExpiredAuctions() external view returns (Auction[] memory) {\\n        uint256 count = 0;\\n\\n        for (uint256 i = 0; i < ongoingAuctionIds.length; i++) {\\n            uint256 auctionId = ongoingAuctionIds[i];\\n            if (auctions[auctionId].ended || block.timestamp >= auctions[auctionId].endTime) {\\n                count++;\\n            }\\n        }\\n\\n        for (uint256 i = 0; i < expiredAuctionIds.length; i++) {\\n            count++;\\n        }\\n\\n        Auction[] memory expired = new Auction[](count);\\n        uint256 index = 0;\\n\\n        for (uint256 i = 0; i < ongoingAuctionIds.length; i++) {\\n            uint256 auctionId = ongoingAuctionIds[i];\\n            if (auctions[auctionId].ended || block.timestamp >= auctions[auctionId].endTime) {\\n                expired[index] = auctions[auctionId];\\n                index++;\\n            }\\n        }\\n\\n        for (uint256 i = 0; i < expiredAuctionIds.length; i++) {\\n            expired[index] = auctions[expiredAuctionIds[i]];\\n            index++;\\n        }\\n\\n        return expired;\\n    }\\n\\n    function cleanupExpiredAuctions() external {\\n        for (uint256 i = ongoingAuctionIds.length; i > 0; i--) {\\n            uint256 auctionId = ongoingAuctionIds[i - 1];\\n            if (block.timestamp >= auctions[auctionId].endTime && !auctions[auctionId].ended) {\\n                _moveToExpired(auctionId);\\n            }\\n        }\\n    }\\n\\n    function withdrawAuction(uint256 _auctionId) external nonReentrant {\\n        Auction storage auction = auctions[_auctionId];\\n        require(auction.seller != address(0), \\\"Auction does not exist\\\");\\n        require(msg.sender == auction.seller, \\\"Only seller can withdraw\\\");\\n        require(!auction.ended, \\\"Auction already ended\\\");\\n        require(auction.highestBidder == address(0), \\\"Cannot withdraw after bids\\\");\\n\\n        auction.ended = true;\\n\\n        // Return NFT to seller\\n        auction.nftContract.transferFrom(address(this), auction.seller, auction.tokenId);\\n\\n        emit AuctionWithdrawn(_auctionId, auction.seller);\\n    }\\n\\n    function emergencyWithdraw(uint256 _auctionId) external onlyOwner nonReentrant {\\n        Auction storage auction = auctions[_auctionId];\\n        require(auction.seller != address(0), \\\"Auction does not exist\\\");\\n        require(!auction.ended, \\\"Auction already ended\\\");\\n\\n        auction.ended = true;\\n\\n        // Return NFT to seller\\n        auction.nftContract.transferFrom(address(this), auction.seller, auction.tokenId);\\n\\n        // Refund highest bidder if any\\n        if (auction.highestBidder != address(0)) {\\n            payable(auction.highestBidder).transfer(auction.highestBid);\\n        }\\n\\n        emit AuctionCancelled(_auctionId, auction.seller, auction.highestBidder);\\n    }\\n}\\n\",\"keccak256\":\"0x474592d06c4e69569993c59228f83d29335189b1b610cba30b87b5977ff1c65c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061012e5760003560e01c8063715018a6116100ab5780639d024a7f1161006f5780639d024a7f14610405578063b5fc983314610427578063b9a2de3a14610447578063d70768a214610467578063eb084fcf14610494578063f2fde38b146104a957600080fd5b8063715018a61461036857806374e6c7301461037d57806378bd79351461039d5780638da5cb5b146103ca5780639979ef45146103f257600080fd5b806336de9742116100f257806336de9742146101ea5780635312ea8e14610229578063571a26a01461024957806361beb1d71461032857806365a7ecb01461034857600080fd5b80631389b1171461013a5780631c8e4c431461016f57806329cb924d146101aa5780632ad71573146101bd578063339a6fc1146101d357600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5061015a610155366004611c59565b6104c9565b60405190151581526020015b60405180910390f35b34801561017b57600080fd5b5061019c61018a366004611c59565b60066020526000908152604090205481565b604051908152602001610166565b3480156101b657600080fd5b504261019c565b3480156101c957600080fd5b5061019c60035481565b3480156101df57600080fd5b506101e8610583565b005b3480156101f657600080fd5b5061020a610205366004611c87565b610615565b604080516001600160a01b039093168352602083019190915201610166565b34801561023557600080fd5b506101e8610244366004611c59565b61069e565b34801561025557600080fd5b506102c8610264366004611c59565b6002602081905260009182526040909120805460018201549282015460038301546004840154600585015460068601546007870154600888015460099098015496986001600160a01b03908116989681169795969495939492939116919060ff168a565b604080519a8b526001600160a01b03998a1660208c0152978916978a01979097526060890195909552608088019390935260a087019190915260c086015290921660e0840152610100830191909152151561012082015261014001610166565b34801561033457600080fd5b506101e8610343366004611cbc565b610845565b34801561035457600080fd5b5061019c610363366004611c59565b610b92565b34801561037457600080fd5b506101e8610bb3565b34801561038957600080fd5b5061019c610398366004611c59565b610bc7565b3480156103a957600080fd5b506103bd6103b8366004611c59565b610bd7565b6040516101669190611d92565b3480156103d657600080fd5b506000546040516001600160a01b039091168152602001610166565b6101e8610400366004611c59565b610c75565b34801561041157600080fd5b5061041a610e5c565b6040516101669190611da7565b34801561043357600080fd5b506101e8610442366004611c59565b611087565b34801561045357600080fd5b506101e8610462366004611c59565b611269565b34801561047357600080fd5b5061019c610482366004611c59565b60076020526000908152604090205481565b3480156104a057600080fd5b5061041a6116b6565b3480156104b557600080fd5b506101e86104c4366004611df6565b611a0a565b60008181526002602081815260408084208151610140810183528154815260018201546001600160a01b03908116948201859052948201548516928101929092526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015490931660e0820152600883015461010082015260099092015460ff1615156101208301521580159061056d57508060a001514210155b801561057c5750806101200151155b9392505050565b6004545b8015610612576000600461059c600184611e29565b815481106105ac576105ac611e3c565b90600052602060002001549050600260008281526020019081526020016000206005015442101580156105f1575060008181526002602052604090206009015460ff16155b156105ff576105ff81611a45565b508061060a81611e52565b915050610587565b50565b60405163152a902d60e11b8152600481018390526024810182905260009081906001600160a01b03861690632a55205a906044016040805180830381865afa925050508015610681575060408051601f3d908101601f1916820190925261067e91810190611e69565b60015b61069057506000905080610696565b90925090505b935093915050565b6106a6611b42565b6106ae611b6f565b600081815260026020526040902060018101546001600160a01b03166106ef5760405162461bcd60e51b81526004016106e690611e97565b60405180910390fd5b600981015460ff16156107145760405162461bcd60e51b81526004016106e690611ec7565b60098101805460ff1916600190811790915560078201549082015460088301546040516323b872dd60e01b81526001600160a01b03938416936323b872dd93610767933093919092169190600401611ef6565b600060405180830381600087803b15801561078157600080fd5b505af1158015610795573d6000803e3d6000fd5b5050505060028101546001600160a01b0316156107ee57600281015460038201546040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156107ec573d6000803e3d6000fd5b505b600281015460018201546040518481526001600160a01b0392831692909116907f01931d6330987ede9ed0553e73df2bd5891f4abc3c2029acc50bad798d3492419060200160405180910390a35061061260018055565b61084d611b6f565b6000821161089d5760405162461bcd60e51b815260206004820152601a60248201527f5374617274696e67207072696365206d757374206265203e203000000000000060448201526064016106e6565b600081116108e45760405162461bcd60e51b815260206004820152601460248201527304475726174696f6e206d757374206265203e20360641b60448201526064016106e6565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd9061091490339030908890600401611ef6565b600060405180830381600087803b15801561092e57600080fd5b505af1158015610942573d6000803e3d6000fd5b50506003549150600090506109578342611f1a565b9050604051806101400160405280838152602001336001600160a01b0316815260200160006001600160a01b0316815260200160008152602001428152602001828152602001858152602001876001600160a01b0316815260200186815260200160001515815250600260008481526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061010082015181600801556101208201518160090160006101000a81548160ff02191690831515021790555090505060048054905060066000848152602001908152602001600020819055506004829080600181540180825580915050600190039060005260206000200160009091909190915055856001600160a01b0316336001600160a01b0316837fcaf0ae751fb2b122e8718bf7c0d4b7584d1418a853a4d0cdaba45418d3da138b88884287604051610b60949392919093845260208401929092526040830152606082015260800190565b60405180910390a4600160036000828254610b7b9190611f1a565b90915550506001805550610b8c9050565b50505050565b60048181548110610ba257600080fd5b600091825260209091200154905081565b610bbb611b42565b610bc56000611b99565b565b60058181548110610ba257600080fd5b610bdf611be9565b506000908152600260208181526040928390208351610140810185528154815260018201546001600160a01b0390811693820193909352928101548216938301939093526003830154606083015260048301546080830152600583015460a0830152600683015460c083015260078301541660e0820152600882015461010082015260099091015460ff16151561012082015290565b610c7d611b6f565b600081815260026020526040902060018101546001600160a01b0316610cb55760405162461bcd60e51b81526004016106e690611e97565b600981015460ff1615610cfa5760405162461bcd60e51b815260206004820152600d60248201526c105d58dd1a5bdb88195b991959609a1b60448201526064016106e6565b80600501544210610d3d5760405162461bcd60e51b815260206004820152600d60248201526c105d58dd1a5bdb88195b991959609a1b60448201526064016106e6565b80600301543411610d7e5760405162461bcd60e51b815260206004820152600b60248201526a42696420746f6f206c6f7760a81b60448201526064016106e6565b600981015460ff1615610da35760405162461bcd60e51b81526004016106e690611ec7565b60028101546001600160a01b031615610df857600281015460038201546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610df6573d6000803e3d6000fd5b505b6002810180546001600160a01b0319163390811790915534600383018190556040805185815260208101929092527f0e54eff26401bf69b81b26f60bd85ef47f5d85275c1d268d84f68d6897431c4791015b60405180910390a25061061260018055565b60606000805b600454811015610ee957600060048281548110610e8157610e81611e3c565b6000918252602080832090910154808352600290915260409091206009015490915060ff16158015610ec3575060008181526002602052604090206005015442105b15610ed65782610ed281611f2d565b9350505b5080610ee181611f2d565b915050610e62565b5060008167ffffffffffffffff811115610f0557610f05611f46565b604051908082528060200260200182016040528015610f3e57816020015b610f2b611be9565b815260200190600190039081610f235790505b5090506000805b60045481101561107e57600060048281548110610f6457610f64611e3c565b6000918252602080832090910154808352600290915260409091206009015490915060ff16158015610fa6575060008181526002602052604090206005015442105b1561106b576000818152600260208181526040928390208351610140810185528154815260018201546001600160a01b0390811693820193909352928101548216938301939093526003830154606083015260048301546080830152600583015460a0830152600683015460c083015260078301541660e0820152600882015461010082015260099091015460ff161515610120820152845185908590811061105157611051611e3c565b6020026020010181905250828061106790611f2d565b9350505b508061107681611f2d565b915050610f45565b50909392505050565b61108f611b6f565b600081815260026020526040902060018101546001600160a01b03166110c75760405162461bcd60e51b81526004016106e690611e97565b60018101546001600160a01b031633146111235760405162461bcd60e51b815260206004820152601860248201527f4f6e6c792073656c6c65722063616e207769746864726177000000000000000060448201526064016106e6565b600981015460ff16156111485760405162461bcd60e51b81526004016106e690611ec7565b60028101546001600160a01b0316156111a35760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f74207769746864726177206166746572206269647300000000000060448201526064016106e6565b60098101805460ff1916600190811790915560078201549082015460088301546040516323b872dd60e01b81526001600160a01b03938416936323b872dd936111f6933093919092169190600401611ef6565b600060405180830381600087803b15801561121057600080fd5b505af1158015611224573d6000803e3d6000fd5b5050505060018101546040518381526001600160a01b03909116907f8bac68995ade0fea3fbfce99e614e2ca91bcbd46732ea234ea30a3246bcbb12c90602001610e4a565b611271611b6f565b600081815260026020526040902060018101546001600160a01b03166112a95760405162461bcd60e51b81526004016106e690611e97565b80600501544210156112f55760405162461bcd60e51b8152602060048201526015602482015274105d58dd1a5bdb881b9bdd08195b991959081e595d605a1b60448201526064016106e6565b600981015460ff161561131a5760405162461bcd60e51b81526004016106e690611ec7565b60098101805460ff1916600117905561133282611a45565b60028101546001600160a01b031615611600576007810154600282015460088301546040516323b872dd60e01b81526001600160a01b03938416936323b872dd936113869330939290911691600401611ef6565b600060405180830381600087803b1580156113a057600080fd5b505af11580156113b4573d6000803e3d6000fd5b5050505060078101546008820154600383015460405163152a902d60e11b8152600481019290925260248201526001600160a01b0390911690632a55205a906044016040805180830381865afa92505050801561142e575060408051601f3d908101601f1916820190925261142b91810190611e69565b60015b61147857600181015460038201546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015611472573d6000803e3d6000fd5b506115ab565b60008111801561149057506001600160a01b03821615155b15611566576040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156114cb573d6000803e3d6000fd5b5060408051858152602081018390526001600160a01b038416917ff670029fc6f5302baba881b4ae845d1453acdf752b4c19ed81fe0fa6a686409b910160405180910390a260008184600301546115229190611e29565b60018501546040519192506001600160a01b03169082156108fc029083906000818181858888f1935050505015801561155f573d6000803e3d6000fd5b50506115a8565b600183015460038401546040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156115a6573d6000803e3d6000fd5b505b50505b600281015460038201546040805185815260208101929092526001600160a01b03909216917fd2aa34a4fdbbc6dff6a3e56f46e0f3ae2a31d7785ff3487aa5c95c642acea501910160405180910390a26116ac565b6007810154600182015460088301546040516323b872dd60e01b81526001600160a01b03938416936323b872dd936116419330939290911691600401611ef6565b600060405180830381600087803b15801561165b57600080fd5b505af115801561166f573d6000803e3d6000fd5b50506040805185815260006020820181905293507fd2aa34a4fdbbc6dff6a3e56f46e0f3ae2a31d7785ff3487aa5c95c642acea501925001610e4a565b5061061260018055565b60606000805b600454811015611742576000600482815481106116db576116db611e3c565b6000918252602080832090910154808352600290915260409091206009015490915060ff168061171c57506000818152600260205260409020600501544210155b1561172f578261172b81611f2d565b9350505b508061173a81611f2d565b9150506116bc565b5060005b600554811015611770578161175a81611f2d565b925050808061176890611f2d565b915050611746565b5060008167ffffffffffffffff81111561178c5761178c611f46565b6040519080825280602002602001820160405280156117c557816020015b6117b2611be9565b8152602001906001900390816117aa5790505b5090506000805b600454811015611904576000600482815481106117eb576117eb611e3c565b6000918252602080832090910154808352600290915260409091206009015490915060ff168061182c57506000818152600260205260409020600501544210155b156118f1576000818152600260208181526040928390208351610140810185528154815260018201546001600160a01b0390811693820193909352928101548216938301939093526003830154606083015260048301546080830152600583015460a0830152600683015460c083015260078301541660e0820152600882015461010082015260099091015460ff16151561012082015284518590859081106118d7576118d7611e3c565b602002602001018190525082806118ed90611f2d565b9350505b50806118fc81611f2d565b9150506117cc565b5060005b60055481101561107e57600260006005838154811061192957611929611e3c565b6000918252602080832090910154835282810193909352604091820190208151610140810183528154815260018201546001600160a01b039081169482019490945260028201548416928101929092526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015490921660e0820152600882015461010082015260099091015460ff16151561012082015283518490849081106119de576119de611e3c565b602002602001018190525081806119f490611f2d565b9250508080611a0290611f2d565b915050611908565b611a12611b42565b6001600160a01b038116611a3c57604051631e4fbdf760e01b8152600060048201526024016106e6565b61061281611b99565b600081815260066020526040812054600454909190611a6690600190611e29565b9050808214611ac557600060048281548110611a8457611a84611e3c565b906000526020600020015490508060048481548110611aa557611aa5611e3c565b600091825260208083209091019290925591825260069052604090208290555b6004805480611ad657611ad6611f5c565b6000828152602080822083016000199081018390559092019092558482526006815260408083208390556005805460079093529083208290556001820181559091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001929092555050565b6000546001600160a01b03163314610bc55760405163118cdaa760e01b81523360048201526024016106e6565b600260015403611b9257604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518061014001604052806000815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600081526020016000151581525090565b600060208284031215611c6b57600080fd5b5035919050565b6001600160a01b038116811461061257600080fd5b600080600060608486031215611c9c57600080fd5b8335611ca781611c72565b95602085013595506040909401359392505050565b60008060008060808587031215611cd257600080fd5b8435611cdd81611c72565b966020860135965060408601359560600135945092505050565b805182526020810151611d1560208401826001600160a01b03169052565b506040810151611d3060408401826001600160a01b03169052565b50606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e0810151611d7360e08401826001600160a01b03169052565b5061010081810151908301526101208082015180151582850152610b8c565b6101408101611da18284611cf7565b92915050565b6020808252825182820181905260009190848201906040850190845b81811015611dea57611dd6838551611cf7565b928401926101409290920191600101611dc3565b50909695505050505050565b600060208284031215611e0857600080fd5b813561057c81611c72565b634e487b7160e01b600052601160045260246000fd5b81810381811115611da157611da1611e13565b634e487b7160e01b600052603260045260246000fd5b600081611e6157611e61611e13565b506000190190565b60008060408385031215611e7c57600080fd5b8251611e8781611c72565b6020939093015192949293505050565b602080825260169082015275105d58dd1a5bdb88191bd95cc81b9bdd08195e1a5cdd60521b604082015260600190565b602080825260159082015274105d58dd1a5bdb88185b1c9958591e48195b991959605a1b604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b80820180821115611da157611da1611e13565b600060018201611f3f57611f3f611e13565b5060010190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603160045260246000fdfea264697066735822122014c5475868164f3001947030dfe83c5a23b854130f6b14b894d372cb19cb48c064736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/NftAuctions.sol:NftAuctions",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2152,
        "contract": "contracts/NftAuctions.sol:NftAuctions",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 7229,
        "contract": "contracts/NftAuctions.sol:NftAuctions",
        "label": "auctions",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Auction)7224_storage)"
      },
      {
        "astId": 7231,
        "contract": "contracts/NftAuctions.sol:NftAuctions",
        "label": "auctionCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 7234,
        "contract": "contracts/NftAuctions.sol:NftAuctions",
        "label": "ongoingAuctionIds",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 7237,
        "contract": "contracts/NftAuctions.sol:NftAuctions",
        "label": "expiredAuctionIds",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 7241,
        "contract": "contracts/NftAuctions.sol:NftAuctions",
        "label": "ongoingAuctionIndex",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 7245,
        "contract": "contracts/NftAuctions.sol:NftAuctions",
        "label": "expiredAuctionIndex",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC721)1390": {
        "encoding": "inplace",
        "label": "contract IERC721",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_struct(Auction)7224_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct NftAuctions.Auction)",
        "numberOfBytes": "32",
        "value": "t_struct(Auction)7224_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Auction)7224_storage": {
        "encoding": "inplace",
        "label": "struct NftAuctions.Auction",
        "members": [
          {
            "astId": 7204,
            "contract": "contracts/NftAuctions.sol:NftAuctions",
            "label": "auctionId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 7206,
            "contract": "contracts/NftAuctions.sol:NftAuctions",
            "label": "seller",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 7208,
            "contract": "contracts/NftAuctions.sol:NftAuctions",
            "label": "highestBidder",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 7210,
            "contract": "contracts/NftAuctions.sol:NftAuctions",
            "label": "highestBid",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 7212,
            "contract": "contracts/NftAuctions.sol:NftAuctions",
            "label": "startTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 7214,
            "contract": "contracts/NftAuctions.sol:NftAuctions",
            "label": "endTime",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 7216,
            "contract": "contracts/NftAuctions.sol:NftAuctions",
            "label": "startingPrice",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 7219,
            "contract": "contracts/NftAuctions.sol:NftAuctions",
            "label": "nftContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IERC721)1390"
          },
          {
            "astId": 7221,
            "contract": "contracts/NftAuctions.sol:NftAuctions",
            "label": "tokenId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 7223,
            "contract": "contracts/NftAuctions.sol:NftAuctions",
            "label": "ended",
            "offset": 0,
            "slot": "9",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}